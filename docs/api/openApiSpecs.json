{
  "info": {
    "title": "EverLearn: e-learning platform",
    "version": "1.0.1",
    "description": "API documentation"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "apis": [
    "./../../routes/*.route.js"
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "paths": {
    "/blockStudents": {
      "post": {
        "tags": [
          "blockStudent"
        ],
        "summary": "To block a student from accessing a specific course.",
        "parameters": [
          {
            "in": "body",
            "name": "blockStudents",
            "description": "block Students data",
            "schema": {
              "$ref": "components/blockStudents/req.json#CreateBlockStudent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/blockStudents/{blockStudentId}": {
      "get": {
        "tags": [
          "blockStudent"
        ],
        "summary": "To get details of a specific blocked student.",
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/blockStudents/res.json#GetBlockStudent"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "blockStudent"
        ],
        "summary": "To unblock a specific student from a specific course.",
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/blockStudents/courses/{courseId}": {
      "get": {
        "tags": [
          "blockStudent"
        ],
        "summary": "To get all blocked students of a specific course",
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/blockStudents/res.json#GetBlockStudentCourse"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "To get list of courses.",
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/courses/res.json#GetCourses"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "To create courses.",
        "parameters": [
          {
            "in": "body",
            "name": "courses",
            "description": "courses data",
            "schema": {
              "$ref": "components/courses/req.json#CreateCourse"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/courses/{courseId}": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "To get courses.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/courses/res.json#GetCourse"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "courses"
        ],
        "summary": "To update courses.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "courses",
            "description": "courses data",
            "schema": {
              "$ref": "components/courses/req.json#UpdateCourse"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "courses"
        ],
        "summary": "To delete courses.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/courses/{courseId}/ratings": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "To get list of courses ratings.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/courses/res.json#GetCourseRatings"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "To create courses.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "courses rating",
            "description": "courses rating data",
            "schema": {
              "$ref": "components/courses/req.json#AddCourseRating"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/courses/{courseId}/modules": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "To get list modules of course.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/courses/res.json#GetCourseModules"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "To create course module.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "courses module",
            "description": "courses module data",
            "schema": {
              "$ref": "components/courses/req.json#CreateCourseModule"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/enrollments": {
      "post": {
        "tags": [
          "enrollments"
        ],
        "summary": "To create enrollment.",
        "parameters": [
          {
            "in": "body",
            "name": "enrollment",
            "description": "enrollments data",
            "schema": {
              "$ref": "components/enrollment/req.json#CreateEnrollment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/enrollments/{enrollId}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "To get specific enrollment.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "enrollId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/enrollment/res.json#GetEnrollment"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "enrollments"
        ],
        "summary": "To update enrollment.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "enrollId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "enrollment",
            "description": "enrollments data",
            "schema": {
              "$ref": "components/enrollment/req.json#UpdateEnrollment"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "enrollments"
        ],
        "summary": "To delete enrollment.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "enrollId",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/enrollments/courses/{courseId}": {
      "get": {
        "tags": [
          "enrollments"
        ],
        "summary": "To get specific course enrollment.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "courseId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/enrollment/res.json#GetEnrollmentsCourse"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/lessons/{lessonId}": {
      "get": {
        "tags": [
          "lessons"
        ],
        "summary": "To get list of all lessons.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "lessonId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/lessons/res.json#GetLesson"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "lessons"
        ],
        "summary": "To update lessons.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "lessonId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "lesson",
            "description": "lessons data",
            "schema": {
              "$ref": "components/lessons/req.json#UpdateLesson"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "lessons"
        ],
        "summary": "To delete lessons.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "lessonId",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/modules/{moduleId}": {
      "get": {
        "tags": [
          "modules"
        ],
        "summary": "To get list of all modules.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "moduleId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/module/res.json#GetModule"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "modules"
        ],
        "summary": "To update modules.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "moduleId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "module",
            "description": "module data",
            "schema": {
              "$ref": "components/module/req.json#UpdateModule"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "modules"
        ],
        "summary": "To delete specific module.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "moduleId",
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/modules/{moduleId}/lessons": {
      "get": {
        "tags": [
          "modules"
        ],
        "summary": "To get list of all modules.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "moduleId",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/module/res.json#GetModuleLesson"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "modules"
        ],
        "summary": "To update modules.",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "moduleId",
            "type": "integer"
          },
          {
            "in": "body",
            "name": "module",
            "description": "module data",
            "schema": {
              "$ref": "components/module/req.json#CreateModuleLesson"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "To register new user.",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user data",
            "schema": {
              "$ref": "components/user/req.json#RegisterUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation."
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "To login user.",
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user data",
            "schema": {
              "$ref": "components/user/req.json#LoginAndTokenGeneration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/user/res.json#LoginAndTokenGeneration"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/enrollments": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "To get all courses login user enroll.",
        "responses": {
          "200": {
            "description": "successful operation.",
            "schema": {
              "$ref": "components/user/res.json#LoginAndTokenGeneration"
            }
          },
          "400": {
            "description": "Bad Request - validation error",
            "schema": {
              "$ref": "components/errorContracts.json#/ValidationErrorResponse"
            }
          },
          "401": {
            "description": "unauthorized access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "403": {
            "description": "forbidden access.",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "components/errorContracts.json#/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {},
  "responses": {},
  "parameters": {},
  "securityDefinitions": {},
  "tags": []
}